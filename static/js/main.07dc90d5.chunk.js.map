{"version":3,"sources":["Api.ts","components/users/UserList.tsx","Home.tsx","components/users/UserEdit.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Api","Users","Endpoint","UserList","useState","items","setItems","columns","minWidth","key","name","onRender","item","Persona","size","PersonaSize","size24","text","fieldName","address","street","suite","to","id","className","useEffect","fetchUsers","fetch","then","response","json","data","console","log","DetailsList","selectionMode","SelectionMode","none","Home","React","Component","UserEdit","props","userId","setUserId","user","setUser","parseInt","match","params","Stack","tokens","childrenGap","TextField","label","value","username","email","type","phone","website","withRouter","history","useHistory","onClick","e","preventDefault","push","url","navLinkGroups","links","initializeIcons","Fabric","dir","Nav","groups","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAAaA,EAAb,kCAAaA,EAEJC,M,UAFID,EACJE,SAAW,uC,UCKb,IAAMC,EAAW,WAAO,IAAD,EACFC,mBAAiB,IADf,mBACrBC,EADqB,KACdC,EADc,KAEtBC,EAAqB,CACzB,CACEC,SAAU,IAAKC,IAAK,OAAQC,KAAM,OAClCC,SAFF,SAEWC,GACP,OAAO,cAACC,EAAA,EAAD,CAASC,KAAMC,IAAYC,OAAQC,KAAI,OAAEL,QAAF,IAAEA,OAAF,EAAEA,EAAMF,SAG1D,CAACF,SAAU,IAAKC,IAAK,QAASC,KAAM,QAASQ,UAAW,SACxD,CAACV,SAAU,IAAKC,IAAK,UAAWC,KAAM,UAAWQ,UAAW,WAC5D,CACEV,SAAU,IAAKC,IAAK,UAAWC,KAAM,UAAWC,SADlD,SAC2DC,GACvD,MAAM,GAAN,cAAUA,QAAV,IAAUA,OAAV,EAAUA,EAAMO,QAAQC,OAAxB,mBAAkCR,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAMO,QAAQE,SAGpD,CACEb,SAAU,IAAKC,IAAK,OAAQC,KAAM,GAAIC,SADxC,SACiDC,GAC7C,OAAO,eAAC,IAAD,CAAMU,GAAE,wBAAYV,QAAZ,IAAYA,OAAZ,EAAYA,EAAMW,GAAlB,SAAR,yBAA2CX,QAA3C,IAA2CA,OAA3C,EAA2CA,EAAMW,OACvDC,UAAW,uBAIlBC,qBAAU,WACRC,OAGF,IAAMA,EAAa,WACjBC,MAAM3B,EAAIC,OACL2B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACG,GACLzB,EAASyB,GACTC,QAAQC,IAAIF,OAIpB,OACI,cAACG,EAAA,EAAD,CAAa7B,MAAOA,EAAOE,QAASA,EAAS4B,cAAeC,IAAcC,Q,wBCzCnEC,EAAb,uKAEQ,OAAO,0CAFf,GAA0BC,IAAMC,W,qDCYnBC,EAAW,SAACC,GAAkB,IAAD,EACZtC,qBADY,mBACjCuC,EADiC,KACzBC,EADyB,OAEhBxC,qBAFgB,mBAEjCyC,EAFiC,KAE3BC,EAF2B,KAgBxC,OAJArB,qBAAU,WAPRmB,EAAUG,SAASL,EAAMM,MAAMC,OAAO1B,GAAI,IAC1CI,MAAM,GAAD,OAAI3B,EAAIC,MAAR,YAAiB0C,IACjBf,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACG,GACLe,EAAQf,SAOT,8BACL,eAACmB,EAAA,EAAD,CAAOC,OAAQ,CAACC,YAAa,IAA7B,UACE,cAACC,EAAA,EAAD,CAAWC,MAAM,OAAOC,MAAK,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAMnC,OACrC,cAAC2C,EAAA,EAAD,CAAWC,MAAM,WAAWC,MAAK,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAMW,WACzC,cAACH,EAAA,EAAD,CAAWC,MAAM,QAAQC,MAAK,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAMY,MAAOC,KAAK,UAClD,cAACL,EAAA,EAAD,CAAWC,MAAM,QAAQC,MAAK,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAMc,MAAOD,KAAK,QAClD,cAACL,EAAA,EAAD,CAAWC,MAAM,UAAUC,MAAK,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAMe,QAASF,KAAK,cCY7CG,mBAvCf,WACE,IAAMC,EAAUC,cACVC,EAAU,SAACC,EAAmCrD,GACjD,OAADqD,QAAC,IAADA,KAAGC,iBACHJ,EAAQK,KAAKvD,EAAOwD,MAEhBC,EAAiC,CACrC,CACEC,MAAO,CACL,CAAC5D,KAAM,OAAQ0D,IAAK,IAAKJ,WACzB,CAACtD,KAAM,QAAS0D,IAAK,SAAUJ,cAKrC,OADAO,cAEI,cAACC,EAAA,EAAD,UACE,qBAAKhD,UAAU,UAAUiD,IAAI,MAA7B,SACE,sBAAKjD,UAAU,cAAf,UACE,qBAAKA,UAAU,mCAAf,SACE,cAACkD,EAAA,EAAD,CAAKC,OAAQN,MAEf,qBAAK7C,UAAU,oCAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoD,KAAK,kBAAkBC,UAAWpC,IACzC,cAAC,IAAD,CAAOmC,KAAK,SAASE,OAAK,EAA1B,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOF,KAAK,IAAIE,OAAK,EAArB,SACE,cAAC,EAAD,qBCxBHC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBrD,MAAK,YAAkD,IAA/CsD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.07dc90d5.chunk.js","sourcesContent":["export class Api {\n  static Endpoint = 'https://jsonplaceholder.typicode.com'\n  static Users = `${Api.Endpoint}/users`\n}\n","import { DetailsList, IColumn, Persona, PersonaSize, SelectionMode } from '@fluentui/react';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { User } from '../../models';\nimport { Api } from '../../Api';\n\nexport const UserList = () => {\n  const [items, setItems] = useState<User[]>([]);\n  const columns: IColumn[] = [\n    {\n      minWidth: 200, key: 'name', name: 'Name',\n      onRender(item?: User) {\n        return <Persona size={PersonaSize.size24} text={item?.name}/>\n      }\n    },\n    {minWidth: 200, key: 'email', name: 'Email', fieldName: 'email'},\n    {minWidth: 200, key: 'website', name: 'Website', fieldName: 'website'},\n    {\n      minWidth: 200, key: 'address', name: 'Address', onRender(item?: User) {\n        return `${item?.address.street} ${item?.address.suite}`;\n      }\n    },\n    {\n      minWidth: 100, key: 'edit', name: '', onRender(item?: User) {\n        return <Link to={`/users/${item?.id}/edit`}>Edit {item?.id}</Link>;\n      }, className: 'ms-textAlignCenter',\n    },\n  ];\n\n  useEffect(() => {\n    fetchUsers();\n  });\n\n  const fetchUsers = () => {\n    fetch(Api.Users)\n        .then(response => response.json())\n        .then((data: User[]) => {\n          setItems(data);\n          console.log(data);\n        });\n  }\n\n  return (\n      <DetailsList items={items} columns={columns} selectionMode={SelectionMode.none}/>\n  );\n\n}\n","import React from 'react';\n\nexport class Home extends React.Component {\n    render() {\n        return <h1>Home</h1>;\n    }\n}","import { Stack, TextField } from '@fluentui/react';\nimport React, { useEffect, useState } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Api } from '../../Api';\nimport { User } from '../../models';\n\ninterface Params {\n  id: string;\n}\n\ninterface Props extends RouteComponentProps<Params> {\n  userId: number;\n}\n\nexport const UserEdit = (props: Props) => {\n  const [userId, setUserId] = useState<number>();\n  const [user, setUser] = useState<User>();\n\n  const fetchUser = () => {\n    setUserId(parseInt(props.match.params.id, 0));\n    fetch(`${Api.Users}/${userId}`)\n        .then(response => response.json())\n        .then((data: User) => {\n          setUser(data);\n        });\n  }\n  useEffect(() => {\n    fetchUser();\n  })\n\n  return <div>\n    <Stack tokens={{childrenGap: 15}}>\n      <TextField label=\"Name\" value={user?.name}/>\n      <TextField label=\"Username\" value={user?.username}/>\n      <TextField label=\"Email\" value={user?.email} type=\"email\"/>\n      <TextField label=\"Phone\" value={user?.phone} type=\"tel\"/>\n      <TextField label=\"Website\" value={user?.website} type=\"url\"/>\n    </Stack>\n  </div>;\n\n}\n","import React from 'react';\nimport './App.css';\nimport { Route, Switch, useHistory, withRouter } from 'react-router-dom';\nimport { UserList } from './components/users/UserList';\nimport { Home } from './Home';\nimport { Fabric, INavLink, INavLinkGroup, initializeIcons, Nav } from '@fluentui/react';\nimport 'office-ui-fabric-react/dist/css/fabric.css';\nimport { UserEdit } from './components/users/UserEdit';\n\nfunction App() {\n  const history = useHistory();\n  const onClick = (e?: React.MouseEvent<HTMLElement>, item?: INavLink) => {\n    e?.preventDefault();\n    history.push(item!!.url);\n  }\n  const navLinkGroups: INavLinkGroup[] = [\n    {\n      links: [\n        {name: 'Home', url: '/', onClick},\n        {name: 'Users', url: '/users', onClick},\n      ]\n    }\n  ];\n  initializeIcons();\n  return (\n      <Fabric>\n        <div className=\"ms-Grid\" dir=\"ltr\">\n          <div className=\"ms-Grid-row\">\n            <div className=\"ms-Grid-col ms-sm6 ms-md4 ms-lg2\">\n              <Nav groups={navLinkGroups}/>\n            </div>\n            <div className=\"ms-Grid-col ms-sm6 ms-md8 ms-lg10\">\n              <Switch>\n                <Route path=\"/users/:id/edit\" component={UserEdit}/>\n                <Route path=\"/users\" exact>\n                  <UserList/>\n                </Route>\n                <Route path=\"/\" exact>\n                  <Home/>\n                </Route>\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </Fabric>\n  );\n}\n\nexport default withRouter(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}