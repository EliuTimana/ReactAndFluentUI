{"version":3,"sources":["logo.svg","services/UsersService.ts","components/users/UserEdit.tsx","components/users/UserList.tsx","Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["UsersService","Promise","resolve","local","localStorage","getItem","JSON","parse","id","this","getAllUsers","users","user","find","x","push","setItem","stringify","UserEdit","userId","visible","onClose","useState","setUser","loading","setLoading","fetchUser","a","getUser","data","useEffect","schema","yup","shape","name","required","email","website","url","phone","Modal","isOpen","scrollableContentClassName","className","IconButton","iconProps","iconName","onClick","disabled","initialValues","validationSchema","onSubmit","values","setSubmitting","setTimeout","alert","isSubmitting","errors","noValidate","Stack","tokens","childrenGap","label","errorMessage","as","TextField","type","PrimaryButton","text","UserList","setUsers","setUserId","modalVisible","setModalVisible","columns","minWidth","key","onRender","item","Persona","size","PersonaSize","size24","imageUrl","avatar","fieldName","Link","openModal","fetchUsers","console","log","length","newUser","companyId","Logo","saveUser","commandBarItems","CommandBar","items","DetailsList","selectionMode","SelectionMode","none","Home","React","Component","App","initializeIcons","Fabric","dir","Nav","groups","links","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAAe,MAA0B,iC,eCE5BA,EAAb,2GAEI,OAAO,IAAIC,SAAQ,SAAAC,GACjB,IAAMC,EAAQC,aAAaC,QAAQ,SACnCH,EAAQC,EAAQG,KAAKC,MAAMJ,GAAS,SAJ1C,uEAQ8BK,GAR9B,yFASwBC,KAAKC,cAT7B,cASUC,EATV,OAUUC,EAAOD,EAAME,MAAK,SAAAC,GAAC,OAAIA,EAAEN,KAAOA,KAV1C,kBAWWI,GAAc,MAXzB,+KAc+BA,GAd/B,uFAesBH,KAAKC,cAf3B,QAeQC,EAfR,QAgBUI,KAAKH,GACXR,aAAaY,QAAQ,QAASV,KAAKW,UAAUN,IAjBjD,8G,6DCkBaO,EAAW,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,QAAoB,EACrCC,mBAAsB,MADe,mBACtDV,EADsD,KAChDW,EADgD,OAE/BD,oBAAS,GAFsB,mBAEtDE,EAFsD,KAE7CC,EAF6C,KAIvDC,EAAS,uCAAG,4BAAAC,EAAA,yDAChBF,GAAW,IACPN,EAFY,gCAGKnB,EAAa4B,QAAQT,GAH1B,OAGRU,EAHQ,OAIdN,EAAQM,GACRJ,GAAW,GALG,uBAOdF,EAAQ,MACRE,GAAW,GARG,4CAAH,qDAYfK,qBAAU,WACRJ,MACC,CAACP,IAEJ,IAAMY,EAASC,MAAaC,MAAM,CAChCC,KAAKF,MAAaG,WAClBC,MAAMJ,MAAaG,WAAWC,QAC9BC,QAAQL,MAAaG,WAAWG,MAChCC,MAAMP,MAAaG,aAGrB,OAAO,8BACL,eAACK,EAAA,EAAD,CAAOC,OAAQrB,EAASsB,2BAA2B,mBAAnD,UACE,sBAAKC,UAAU,qCAAf,UACE,sBAAMA,UAAU,kBAAhB,SAA8C,OAAXxB,EAAkB,cAAgB,cACrE,cAACyB,EAAA,EAAD,CAAYC,UAAW,CAACC,SAAU,UAAWC,QAAS,kBAAM1B,KAAW2B,SAAUxB,QAGhFA,GAAW,qBAAKmB,UAAU,MAAf,SACR,cAAC,IAAD,CACIM,cAAe,CACbf,KAAI,OAAEtB,QAAF,IAAEA,OAAF,EAAEA,EAAMsB,KACZE,MAAK,OAAExB,QAAF,IAAEA,OAAF,EAAEA,EAAMwB,MACbC,QAAO,OAAEzB,QAAF,IAAEA,OAAF,EAAEA,EAAMyB,QACfE,MAAK,OAAE3B,QAAF,IAAEA,OAAF,EAAEA,EAAM2B,OAEfW,iBAAkBnB,EAClBoB,SACE,SAACC,EAAD,GAA8B,IAApBC,EAAmB,EAAnBA,cACRC,YAAW,WACTC,MAAMjD,KAAKW,UAAUmC,EAAQ,KAAM,IACnCC,GAAc,KACb,MAbX,SAiBI,gBAAEG,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,OAAhB,OACI,cAAC,IAAD,CAAMC,YAAU,EAAhB,SACE,eAACC,EAAA,EAAD,CAAOC,OAAQ,CAACC,YAAa,IAA7B,UACE,cAAC,IAAD,CAAO3B,KAAK,OAAO4B,MAAM,OAAO3B,UAAQ,EAAC4B,aAAcN,EAAOvB,KAAM8B,GAAIC,MACxE,cAAC,IAAD,CAAO/B,KAAK,QAAQ4B,MAAM,QAAQ3B,UAAQ,EAAC+B,KAAK,QAAQH,aAAcN,EAAOrB,MAAO4B,GAAIC,MACxF,cAAC,IAAD,CAAO/B,KAAK,UAAU4B,MAAM,UAAU3B,UAAQ,EAAC+B,KAAK,MAAMH,aAAcN,EAAOpB,QAAS2B,GAAIC,MAC5F,cAAC,IAAD,CAAO/B,KAAK,QAAQ4B,MAAM,QAAQ3B,UAAQ,EAAC+B,KAAK,MAAMH,aAAcN,EAAOlB,MAAOyB,GAAIC,MACtF,cAACE,EAAA,EAAD,CAAeC,KAAK,OAAOF,KAAK,SAASlB,SAAUQ,oBC/D9Da,EAAW,WAAO,IAAD,EACF/C,mBAAiB,IADf,mBACrBX,EADqB,KACd2D,EADc,OAEAhD,mBAAwB,MAFxB,mBAErBH,EAFqB,KAEboD,EAFa,OAGYjD,oBAAS,GAHrB,mBAGrBkD,EAHqB,KAGPC,EAHO,KAItBC,EAAqB,CACzB,CACEC,SAAU,IAAKC,IAAK,OAAQ1C,KAAM,OAClC2C,SAFF,SAEWC,GACP,OAAO,cAACC,EAAA,EAAD,CAASC,KAAMC,IAAYC,OAAQd,KAAI,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAAM5C,KAAMiD,SAAQ,OAAEL,QAAF,IAAEA,OAAF,EAAEA,EAAMM,WAGhF,CAACT,SAAU,IAAKC,IAAK,QAAS1C,KAAM,QAASmD,UAAW,SACxD,CAACV,SAAU,IAAKC,IAAK,UAAW1C,KAAM,UAAWmD,UAAW,WAC5D,CACEV,SAAU,IAAKC,IAAK,QAAS1C,KAAM,QAAS2C,SAD9C,SACuDC,GACnD,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAMvC,QAGjB,CACEoC,SAAU,IAAKC,IAAK,OAAQ1C,KAAM,GAAI2C,SADxC,SACiDC,GAC7C,OAAO,cAACQ,EAAA,EAAD,CAAMvC,QAAS,kBAAMwC,EAAS,OAACT,QAAD,IAACA,OAAD,EAACA,EAAMtE,KAArC,mBACNmC,UAAW,uBAIlBb,qBAAU,WACR0D,MACC,IAEH,IAAMA,EAAU,uCAAG,8BAAA7D,EAAA,sEACE3B,EAAaU,cADf,UACXmB,EADW,OAEjB4D,QAAQC,IAAI7D,GACQ,IAAhBA,EAAK8D,OAHQ,wBAITC,EAAU,CACdpF,GAAI,EACJ0B,KAAM,OACNE,MAAO,gBACPyD,UAAW,EACXtD,MAAO,YACPF,QAAS,sBACT+C,OAAQU,GAXK,SAaT9F,EAAa+F,SAASH,GAbb,OAcftB,EAAS,CAACsB,IAdK,wBAgBftB,EAASzC,GAhBM,4CAAH,qDAmBV0D,EAAY,WAA+B,IAA9B/E,EAA6B,uDAAT,KACrC+D,EAAU/D,GACViE,GAAgB,IAGZuB,EAA0C,CAC9C,CACEpB,IAAK,MAAOR,KAAM,MAAOvB,UAAW,CAACC,SAAU,OAAQC,QAAS,WAC9DwC,OAKN,OACI,qCACE,cAACU,EAAA,EAAD,CAAYC,MAAOF,IACnB,cAACG,EAAA,EAAD,CAAaD,MAAOvF,EAAO+D,QAASA,EAAS0B,cAAeC,IAAcC,OAC1E,cAAC,EAAD,CAAUlF,QAASoD,EAAcrD,OAAQA,EAAQE,QAAS,kBAAMoD,GAAgB,U,gBC/E3E8B,EAAb,uKAEQ,OAAO,0CAFf,GAA0BC,IAAMC,W,kCC2CjBC,MArCf,WAYE,OAFAC,cAGI,cAAC,IAAD,UACE,cAACC,EAAA,EAAD,UACE,qBAAKjE,UAAU,UAAUkE,IAAI,MAA7B,SACE,sBAAKlE,UAAU,cAAf,UACE,qBAAKA,UAAU,mCAAf,SACE,cAACmE,EAAA,EAAD,CAAKC,OAjBoB,CACrC,CACEC,MAAO,CACL,CAAC9E,KAAM,OAAQI,IAAK,MAAOsC,IAAK,QAChC,CAAC1C,KAAM,QAASI,IAAK,WAAYsC,IAAK,gBAehC,qBAAKjC,UAAU,oCAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsE,KAAK,SAASC,OAAK,EAA1B,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,EAAD,qBCpBLC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2dad333f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { User } from '../models';\n\nexport class UsersService {\n  public static getAllUsers(): Promise<User[]> {\n    return new Promise(resolve => {\n      const local = localStorage.getItem('users');\n      resolve(local ? JSON.parse(local) : []);\n    });\n  }\n\n  public static async getUser(id: number): Promise<User | null> {\n    const users = await this.getAllUsers();\n    const user = users.find(x => x.id === id);\n    return user ? user : null;\n  }\n\n  public static async saveUser(user: User) {\n    let users = await this.getAllUsers();\n    users.push(user);\n    localStorage.setItem('users', JSON.stringify(users));\n  }\n}\n","import { IconButton, Modal, PrimaryButton, Stack, TextField } from '@fluentui/react';\nimport { Field, Form, Formik } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport { User } from '../../models';\nimport { UsersService } from '../../services/UsersService';\nimport * as yup from 'yup';\n/*interface Params {\n  id: string;\n}\n\ninterface Props extends RouteComponentProps<Params> {\n  userId: number;\n}*/\ninterface Props {\n  userId: number | null;\n  visible: boolean;\n\n  onClose(): void;\n}\n\nexport const UserEdit = ({userId, visible, onClose}: Props) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  const fetchUser = async () => {\n    setLoading(true);\n    if (userId) {\n      const data = await UsersService.getUser(userId);\n      setUser(data);\n      setLoading(false);\n    } else {\n      setUser(null);\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    fetchUser();\n  }, [userId]);\n\n  const schema = yup.object().shape({\n    name:yup.string().required(),\n    email:yup.string().required().email(),\n    website:yup.string().required().url(),\n    phone:yup.string().required(),\n  })\n\n  return <div>\n    <Modal isOpen={visible} scrollableContentClassName=\"overflow-visible\">\n      <div className=\"d-flex justify-content-between p-3\">\n        <span className=\"ms-font-xl-plus\">{userId === null ? 'Create User' : 'Edit User'}</span>\n        <IconButton iconProps={{iconName: 'Cancel'}} onClick={() => onClose()} disabled={loading}/>\n      </div>\n      {\n        !loading && <div className=\"p-3\">\n            <Formik\n                initialValues={{\n                  name: user?.name,\n                  email: user?.email,\n                  website: user?.website,\n                  phone: user?.phone\n                }}\n                validationSchema={schema}\n                onSubmit={\n                  (values, {setSubmitting}) => {\n                    setTimeout(() => {\n                      alert(JSON.stringify(values, null, 2));\n                      setSubmitting(false);\n                    }, 400);\n                  }\n                }>\n              {\n                ({isSubmitting, errors}) => (\n                    <Form noValidate>\n                      <Stack tokens={{childrenGap: 15}}>\n                        <Field name=\"name\" label=\"Name\" required errorMessage={errors.name} as={TextField}/>\n                        <Field name=\"email\" label=\"Email\" required type=\"email\" errorMessage={errors.email} as={TextField}/>\n                        <Field name=\"website\" label=\"Website\" required type=\"url\" errorMessage={errors.website} as={TextField}/>\n                        <Field name=\"phone\" label=\"Phone\" required type=\"tel\" errorMessage={errors.phone} as={TextField}/>\n                        <PrimaryButton text=\"Save\" type=\"submit\" disabled={isSubmitting}/>\n                      </Stack>\n                    </Form>\n                )\n              }\n            </Formik>\n        </div>\n      }\n    </Modal>\n  </div>;\n\n}\n","import {\n  CommandBar,\n  DetailsList,\n  IColumn,\n  ICommandBarItemProps,\n  Link,\n  Persona,\n  PersonaSize,\n  SelectionMode\n} from '@fluentui/react';\nimport React, { useEffect, useState } from 'react';\nimport { User } from '../../models';\nimport Logo from '../../logo.svg';\nimport { UsersService } from '../../services/UsersService';\nimport { UserEdit } from './UserEdit';\n\nexport const UserList = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [userId, setUserId] = useState<number | null>(null);\n  const [modalVisible, setModalVisible] = useState(false);\n  const columns: IColumn[] = [\n    {\n      minWidth: 200, key: 'name', name: 'Name',\n      onRender(item?: User) {\n        return <Persona size={PersonaSize.size24} text={item?.name} imageUrl={item?.avatar}/>\n      }\n    },\n    {minWidth: 200, key: 'email', name: 'Email', fieldName: 'email'},\n    {minWidth: 200, key: 'website', name: 'Website', fieldName: 'website'},\n    {\n      minWidth: 200, key: 'phone', name: 'Phone', onRender(item?: User) {\n        return item?.phone;\n      }\n    },\n    {\n      minWidth: 100, key: 'edit', name: '', onRender(item?: User) {\n        return <Link onClick={() => openModal(item?.id)}>Edit</Link>;\n      }, className: 'ms-textAlignCenter',\n    },\n  ];\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const fetchUsers = async () => {\n    const data = await UsersService.getAllUsers();\n    console.log(data)\n    if (data.length === 0) {\n      const newUser = {\n        id: 1,\n        name: 'Test',\n        email: 'test@test.com',\n        companyId: 1,\n        phone: '988998895',\n        website: 'https://www.test.pe',\n        avatar: Logo\n      };\n      await UsersService.saveUser(newUser);\n      setUsers([newUser]);\n    } else {\n      setUsers(data);\n    }\n  }\n  const openModal = (id: number | null = null) => {\n    setUserId(id);\n    setModalVisible(true);\n  }\n\n  const commandBarItems: ICommandBarItemProps[] = [\n    {\n      key: 'new', text: 'New', iconProps: {iconName: 'Add'}, onClick: () => {\n        openModal();\n      }\n    }\n  ]\n\n  return (\n      <>\n        <CommandBar items={commandBarItems}/>\n        <DetailsList items={users} columns={columns} selectionMode={SelectionMode.none}/>\n        <UserEdit visible={modalVisible} userId={userId} onClose={() => setModalVisible(false)}/>\n      </>\n  );\n}\n","import React from 'react';\n\nexport class Home extends React.Component {\n    render() {\n        return <h1>Home</h1>;\n    }\n}","import React from 'react';\nimport './App.scss';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { UserList } from './components/users/UserList';\nimport { Home } from './Home';\nimport { Fabric, INavLinkGroup, initializeIcons, Nav } from '@fluentui/react';\nimport 'office-ui-fabric-react/dist/css/fabric.css';\n\nfunction App() {\n  const navLinkGroups: INavLinkGroup[] = [\n    {\n      links: [\n        {name: 'Home', url: '/#/', key: 'home'},\n        {name: 'Users', url: '/#/users', key: 'users'},\n      ]\n    }\n  ];\n\n  initializeIcons();\n\n  return (\n      <HashRouter>\n        <Fabric>\n          <div className=\"ms-Grid\" dir=\"ltr\">\n            <div className=\"ms-Grid-row\">\n              <div className=\"ms-Grid-col ms-sm6 ms-md4 ms-lg2\">\n                <Nav groups={navLinkGroups}/>\n              </div>\n              <div className=\"ms-Grid-col ms-sm6 ms-md8 ms-lg10\">\n                <Switch>\n                  <Route path=\"/users\" exact>\n                    <UserList/>\n                  </Route>\n                  <Route path=\"/\" exact>\n                    <Home/>\n                  </Route>\n                </Switch>\n              </div>\n            </div>\n          </div>\n        </Fabric>\n      </HashRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}