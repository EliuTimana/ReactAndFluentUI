{"version":3,"sources":["logo.svg","services/UsersService.ts","components/users/UserEdit.tsx","components/common/Alert.tsx","components/users/UserList.tsx","Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["UsersService","Promise","resolve","a","delayOperation","local","localStorage","getItem","JSON","parse","id","this","getAllUsers","users","user","find","x","index","findIndex","saveInLocal","length","Math","max","map","push","userId","filter","setItem","stringify","duration","setTimeout","UserEdit","onClose","useState","setUser","loading","setLoading","visible","setVisible","formikRef","useRef","fetchUser","getUser","data","current","setFieldValue","name","email","website","phone","saveUser","formData","updateUser","useEffect","schema","yup","shape","required","url","Modal","isOpen","scrollableContentClassName","className","IconButton","iconProps","iconName","onClick","disabled","innerRef","initialValues","validationSchema","onSubmit","values","setSubmitting","isSubmitting","errors","noValidate","ProgressIndicator","Stack","tokens","childrenGap","label","errorMessage","as","TextField","type","PrimaryButton","text","Alert","dialogContentProps","onConfirm","onCancel","confirmButtonText","cancelButtonText","Dialog","DialogFooter","DefaultButton","UserList","setUsers","setUserId","modalVisible","setModalVisible","modalDeleteVisible","setModalDeleteVisible","deleting","setDeleting","columns","minWidth","key","onRender","item","Persona","size","PersonaSize","size24","fieldName","menuIconProps","menuProps","items","openModal","fetchUsers","newUser","companyId","avatar","Logo","handleConfirmDelete","delete","console","error","commandBarItems","DialogType","normal","title","closeButtonAriaLabel","subText","CommandBar","ShimmeredDetailsList","selectionMode","SelectionMode","none","enableShimmer","Home","React","Component","App","initializeIcons","Fabric","dir","Nav","groups","links","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a6dacaf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { User } from '../models';\n\nexport class UsersService {\n  public static getAllUsers(): Promise<User[]> {\n    return new Promise(async resolve => {\n      await this.delayOperation();\n      const local = localStorage.getItem('users');\n      resolve(local ? JSON.parse(local) : []);\n    });\n  }\n\n  public static async getUser(id: number): Promise<User | null> {\n    await this.delayOperation();\n    const users = await this.getAllUsers();\n    const user = users.find(x => x.id === id);\n    return user ? user : null;\n  }\n\n  public static async updateUser(user: User) {\n    await this.delayOperation();\n    let users = await this.getAllUsers();\n    const index = users.findIndex(x => x.id === user.id);\n    users[index] = user;\n    this.saveInLocal(users);\n  }\n\n  public static async saveUser(user: User) {\n    await this.delayOperation();\n    let users = await this.getAllUsers();\n    user.id = users.length === 0 ? 1 : Math.max(...users.map(x => x.id)) + 1;\n    users.push(user);\n    this.saveInLocal(users);\n  }\n\n  public static async delete(userId: number) {\n    await this.delayOperation();\n    let users = await this.getAllUsers();\n    users = users.filter(x => x.id !== userId);\n    this.saveInLocal(users);\n  }\n\n  private static saveInLocal(users: User[]) {\n    localStorage.setItem('users', JSON.stringify(users));\n  }\n\n  private static async delayOperation(duration: number = 1500) {\n    return new Promise<void>(resolve => {\n      setTimeout(() => {\n        resolve();\n      }, duration);\n    })\n  }\n}\n","import { IconButton, Modal, PrimaryButton, ProgressIndicator, Stack, TextField } from '@fluentui/react';\nimport { Field, Form, Formik } from 'formik';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { UsersService } from '../../services/UsersService';\nimport * as yup from 'yup';\nimport { User } from '../../models';\n\n/*interface Params {\n  id: string;\n}\n\ninterface Props extends RouteComponentProps<Params> {\n  userId: number;\n}*/\n\ninterface Props {\n  userId: number | null;\n\n  onClose(): void;\n}\n\nexport const UserEdit = ({userId, onClose}: Props) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [visible, setVisible] = useState(true);\n  const formikRef = useRef<any>();\n\n  const fetchUser = async () => {\n    setLoading(true);\n    if (userId) {\n      const data = await UsersService.getUser(userId);\n      setUser(data);\n      if (formikRef.current) {\n        formikRef.current?.setFieldValue('name', data?.name)\n        formikRef.current?.setFieldValue('email', data?.email)\n        formikRef.current?.setFieldValue('website', data?.website)\n        formikRef.current?.setFieldValue('phone', data?.phone)\n      }\n      setLoading(false);\n    } else {\n      setUser(null);\n      setLoading(false);\n    }\n  }\n\n  const saveUser = async (formData: User) => {\n    try {\n      if (!userId) {\n        await UsersService.saveUser({...formData});\n      } else {\n        await UsersService.updateUser({...formData, id: userId});\n      }\n      setVisible(false);\n      onClose();\n    } catch (e) {\n\n    }\n  }\n\n  useEffect(() => {\n    fetchUser();\n  }, [userId]);\n\n  const schema = yup.object().shape({\n    name: yup.string().required(),\n    email: yup.string().required().email(),\n    website: yup.string().required().url(),\n    phone: yup.string().required(),\n  })\n\n  return <div>\n    <Modal isOpen={visible} scrollableContentClassName=\"overflow-visible\">\n      <div className=\"d-flex justify-content-between p-3\">\n        <span className=\"ms-font-xl-plus\">{userId === null ? 'Create User' : 'Edit User'}</span>\n        <IconButton iconProps={{iconName: 'Cancel'}} onClick={() => onClose()} disabled={loading}/>\n      </div>\n      <div className=\"p-3\">\n        <Formik innerRef={formikRef}\n                initialValues={{\n                  name: '',\n                  email: '',\n                  website: '',\n                  phone: '',\n                }}\n                validationSchema={schema}\n                onSubmit={\n                  async (values, {setSubmitting}) => {\n                    await saveUser(values as User);\n                    setSubmitting(false);\n                  }\n                }>\n          {\n            ({isSubmitting, errors}) => (\n                <Form noValidate>\n                  {(loading || isSubmitting) && <ProgressIndicator/>}\n                  <Stack tokens={{childrenGap: 15}}>\n                    <Field disabled={isSubmitting || loading} name=\"name\" label=\"Name\" required errorMessage={errors.name} as={TextField}/>\n                    <Field disabled={isSubmitting || loading} name=\"email\" label=\"Email\" required type=\"email\" errorMessage={errors.email}\n                           as={TextField}/>\n                    <Field disabled={isSubmitting || loading} name=\"website\" label=\"Website\" required type=\"url\" errorMessage={errors.website}\n                           as={TextField}/>\n                    <Field disabled={isSubmitting || loading} name=\"phone\" label=\"Phone\" required type=\"text\" errorMessage={errors.phone}\n                           as={TextField}/>\n                    <PrimaryButton text=\"Save\" type=\"submit\" disabled={isSubmitting || loading}/>\n                  </Stack>\n                </Form>\n            )\n          }\n        </Formik>\n      </div>\n    </Modal>\n  </div>;\n\n}\n","import {\n  DefaultButton,\n  Dialog,\n  DialogFooter,\n  IDialogContentProps,\n  PrimaryButton,\n  ProgressIndicator\n} from '@fluentui/react'\n\ninterface Props {\n  onConfirm?: () => void;\n\n  onCancel?: () => void;\n\n  visible: boolean;\n  loading?: boolean;\n  dialogContentProps: IDialogContentProps;\n  confirmButtonText?: string;\n  cancelButtonText?: string;\n}\n\nexport const Alert = ({\n                        dialogContentProps,\n                        onConfirm,\n                        onCancel,\n                        visible,\n                        loading,\n                        confirmButtonText,\n                        cancelButtonText\n                      }: Props) => {\n  const handleConfirm = () => {\n    if (onConfirm) {\n      onConfirm();\n    }\n  }\n\n  const handleCancel = () => {\n    if (onCancel) {\n      onCancel();\n    }\n  }\n\n  return (\n      <Dialog dialogContentProps={dialogContentProps} isOpen={visible}>\n        {loading && <ProgressIndicator/>}\n        <DialogFooter>\n          <PrimaryButton disabled={loading} onClick={() => handleConfirm()} text={confirmButtonText || 'Confirm'}/>\n          <DefaultButton disabled={loading} onClick={() => handleCancel()} text={cancelButtonText || 'Cancel'}/>\n        </DialogFooter>\n      </Dialog>\n  );\n}\n","import {\n  CommandBar,\n  DetailsList,\n  DialogType,\n  IColumn,\n  ICommandBarItemProps,\n  IconButton,\n  IDialogContentProps,\n  Persona,\n  PersonaSize,\n  SelectionMode,\n  ShimmeredDetailsList\n} from '@fluentui/react';\nimport React, { useEffect, useState } from 'react';\nimport { User } from '../../models';\nimport Logo from '../../logo.svg';\nimport { UsersService } from '../../services/UsersService';\nimport { UserEdit } from './UserEdit';\nimport { Alert } from '../common/Alert';\n\nexport const UserList = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [userId, setUserId] = useState<number | null>(null);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [modalDeleteVisible, setModalDeleteVisible] = useState(false);\n  const [deleting, setDeleting] = useState(false);\n\n  const columns: IColumn[] = [\n    {\n      minWidth: 200, key: 'name', name: 'Name',\n      onRender(item?: User) {\n        return <Persona size={PersonaSize.size24} text={item?.name}/>\n      }\n    },\n    {minWidth: 200, key: 'email', name: 'Email', fieldName: 'email'},\n    {minWidth: 200, key: 'website', name: 'Website', fieldName: 'website'},\n    {\n      minWidth: 200, key: 'phone', name: 'Phone', onRender(item?: User) {\n        return item?.phone;\n      }\n    },\n    {\n      minWidth: 100, key: 'actions', name: '', onRender(item?: User) {\n        return <IconButton\n            menuIconProps={{iconName: 'MoreVertical'}}\n            menuProps={{\n              items: [\n                {\n                  key: 'edit',\n                  text: 'Edit',\n                  onClick: () => openModal(item?.id),\n                },\n                {\n                  key: 'delete',\n                  text: 'Delete',\n                  onClick: () => {\n                    setUserId(item?.id!);\n                    setModalDeleteVisible(true);\n                  },\n                },\n              ],\n            }}/>\n            ;\n      }, className: 'ms-textAlignCenter',\n    },\n  ];\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const fetchUsers = async () => {\n    setLoading(true);\n    const data = await UsersService.getAllUsers();\n    if (data.length === 0) {\n      const newUser = {\n        id: 1,\n        name: 'Test',\n        email: 'test@test.com',\n        companyId: 1,\n        phone: '988998895',\n        website: 'https://www.test.pe',\n        avatar: Logo\n      };\n      await UsersService.saveUser(newUser);\n      setUsers([newUser]);\n      setLoading(false);\n    } else {\n      setUsers(data);\n      setLoading(false);\n    }\n  }\n  const openModal = (id: number | null = null) => {\n    setUserId(id);\n    setModalVisible(true);\n  }\n\n  const handleCloseModal = () => {\n    setModalVisible(false);\n    fetchUsers();\n  }\n\n  const handleConfirmDelete = async () => {\n    try {\n      if (!userId) return;\n      setDeleting(true);\n\n      await UsersService.delete(userId);\n      setDeleting(false);\n      setModalDeleteVisible(false);\n      fetchUsers();\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  const commandBarItems: ICommandBarItemProps[] = [\n    {\n      key: 'new', text: 'New', iconProps: {iconName: 'Add'}, onClick: () => {\n        openModal();\n      }\n    }\n  ]\n\n  const dialogContentProps: IDialogContentProps = {\n    type: DialogType.normal,\n    title: 'Delete?',\n    closeButtonAriaLabel: 'Close',\n    subText: 'Do you want to delete this user?'\n  };\n\n  return (\n      <>\n        <CommandBar items={commandBarItems}/>\n        <ShimmeredDetailsList items={users} columns={columns} selectionMode={SelectionMode.none} enableShimmer={loading} />\n        {modalVisible && <UserEdit userId={userId} onClose={() => handleCloseModal()}/>}\n        <Alert visible={modalDeleteVisible}\n               dialogContentProps={dialogContentProps}\n               loading={deleting}\n               onCancel={() => setModalDeleteVisible(false)}\n               onConfirm={handleConfirmDelete}/>\n      </>\n  );\n}\n","import React from 'react';\n\nexport class Home extends React.Component {\n    render() {\n        return <h1>Home</h1>;\n    }\n}","import React from 'react';\nimport './App.scss';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { UserList } from './components/users/UserList';\nimport { Home } from './Home';\nimport { Fabric, INavLinkGroup, initializeIcons, Nav } from '@fluentui/react';\nimport 'office-ui-fabric-react/dist/css/fabric.css';\n\nfunction App() {\n  const navLinkGroups: INavLinkGroup[] = [\n    {\n      links: [\n        {name: 'Home', url: '#/', key: 'home'},\n        {name: 'Users', url: '#/users', key: 'users'},\n      ]\n    }\n  ];\n\n  initializeIcons();\n\n  return (\n      <HashRouter>\n        <Fabric>\n          <div className=\"ms-Grid\" dir=\"ltr\">\n            <div className=\"ms-Grid-row\">\n              <div className=\"ms-Grid-col ms-sm6 ms-md4 ms-lg2\">\n                <Nav groups={navLinkGroups}/>\n              </div>\n              <div className=\"ms-Grid-col ms-sm6 ms-md8 ms-lg10\">\n                <Switch>\n                  <Route path=\"/users\" exact>\n                    <UserList/>\n                  </Route>\n                  <Route path=\"/\" exact>\n                    <Home/>\n                  </Route>\n                </Switch>\n              </div>\n            </div>\n          </div>\n        </Fabric>\n      </HashRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}